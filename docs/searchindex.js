Search.setIndex({"docnames": ["Example", "Install", "Installrst", "QuickStart", "Tutorials", "index", "source/modules", "source/openprotein", "source/openprotein.core", "source/openprotein.data", "source/openprotein.datasets", "source/openprotein.models", "source/openprotein.task", "source/openprotein.utils"], "filenames": ["Example.md", "Install.md", "Installrst.rst", "QuickStart.md", "Tutorials.rst", "index.rst", "source\\modules.rst", "source\\openprotein.rst", "source\\openprotein.core.rst", "source\\openprotein.data.rst", "source\\openprotein.datasets.rst", "source\\openprotein.models.rst", "source\\openprotein.task.rst", "source\\openprotein.utils.rst"], "titles": ["Example", "Install", "Install", "QuickStart", "Tutorials", "Open-Protein - A deep learning platform", "src", "openprotein package", "openprotein.core package", "openprotein.data package", "openprotein.datasets package", "openprotein.models package", "openprotein.task package", "openprotein.utils package"], "terms": {"import": [0, 4, 10, 13], "torch": [0, 4, 9, 11, 13], "nn": [0, 4, 11], "function": [0, 4, 9, 10, 11, 12, 13], "f": [0, 4, 10], "from": [0, 4, 5, 9, 10, 11, 12, 13], "openprotein": [0, 1, 2, 4, 5, 6], "dataset": [0, 4, 5, 6, 7, 9], "uniref": [0, 4, 5, 6, 7], "data": [0, 4, 5, 6, 7, 8, 10, 13], "maskedconvert": [0, 4, 7, 9, 10], "alphabet": [0, 4, 7, 9, 11, 12], "model": [0, 4, 5, 6, 7, 12, 13], "esm1b": [0, 4, 5, 6, 7], "util": [0, 4, 5, 6, 7, 9], "accuraci": [0, 4, 7, 13], "valid": [0, 4, 9, 10], "proteinseq_tok": [0, 4, 9, 10], "tok": [0, 4, 9, 10, 11], "l": [0, 4, 10], "A": [0, 4, 9, 10, 13], "g": [0, 4, 9, 10], "v": [0, 4, 10], "": [0, 4, 9, 10, 11, 13], "e": [0, 4, 9, 10], "r": [0, 4, 10], "t": [0, 4, 9, 10], "i": [0, 1, 2, 4, 5, 9, 10, 11, 13], "d": [0, 4, 10, 13], "p": [0, 4, 10, 13], "k": [0, 4, 10], "q": [0, 4, 10], "n": [0, 1, 2, 4, 10], "y": [0, 4, 10], "m": [0, 4, 10], "h": [0, 4, 10], "w": [0, 4, 10], "c": [0, 4, 10], "x": [0, 4, 10, 11, 13], "b": [0, 4, 10], "u": [0, 4, 10], "z": [0, 4, 10], "o": [0, 4, 10], "convert": [0, 4, 7, 9, 10, 11, 12, 13], "build_convert": [0, 4, 7, 9], "build_alphabet": [0, 4, 7, 9, 11], "arg": [0, 4, 7, 8, 9, 10, 11, 12, 13], "num_lay": [0, 4], "33": [0, 4, 11], "embed_dim": [0, 4, 11, 12], "1280": [0, 4, 11, 12], "logit_bia": [0, 4], "true": [0, 4, 9, 11, 13], "ffn_embed_dim": [0, 4, 11], "5120": [0, 4, 11], "attention_head": [0, 4, 11], "20": [0, 4, 10, 11], "max_posit": [0, 4], "1024": [0, 4, 11], "emb_layer_norm_befor": [0, 4, 11], "checkpoint_path": [0, 4, 11], "none": [0, 4, 9, 11, 13], "argpars": [0, 4], "namespac": [0, 4], "lambda": [0, 4, 9, 10], "dl": [0, 4, 10], "get_dataload": [0, 4, 7, 9, 10], "collate_fn": [0, 4, 9, 10], "origin_token": [0, 4], "masked_token": [0, 4], "target_token": [0, 4], "result": [0, 4, 9, 11, 13], "logit": [0, 4], "loss": [0, 4, 13], "contigu": [0, 4], "view": [0, 4], "1": [0, 1, 2, 4, 9, 10, 11, 13], "size": [0, 4, 9, 11], "reduct": [0, 4], "mean": [0, 4, 9, 13], "ignore_index": [0, 4], "padding_idx": [0, 4, 7, 11], "cross_entropi": [0, 4], "print": [0, 4, 10], "break": [0, 4], "thi": [1, 2, 9, 11, 12, 13], "repo": [1, 2], "test": [1, 2, 10], "python": [1, 2], "3": [1, 2, 11, 12, 13], "6": [1, 2, 13], "9": [1, 2], "pytorch": [1, 2, 9], "5": [1, 2, 10, 11, 13], "0": [1, 2, 9, 10, 11, 13], "exampl": [1, 2, 5, 9, 10, 13], "when": [1, 2, 9, 13], "you": [1, 2, 11], "open": [1, 2], "protein": [1, 2, 10, 11, 12], "we": [1, 2, 10], "do": [1, 2], "forc": [1, 2], "depend": [1, 2, 9], "ar": [1, 2, 9, 10, 11, 13], "free": [1, 2], "choos": [1, 2], "version": [1, 2], "higher": [1, 2], "can": [1, 2, 9, 10], "virtual": [1, 2], "us": [1, 2, 9, 10, 11], "anaconda": [1, 2], "conda": [1, 2], "8": [1, 2, 10, 13], "activ": [1, 2, 5, 6, 7, 11], "first": [1, 2], "need": [1, 2, 9, 11, 12, 13], "have": [1, 2, 9, 13], "number": [1, 2, 9, 11, 13], "greater": [1, 2, 13], "than": [1, 2, 9, 13], "pleas": [1, 2], "refer": [1, 2, 10, 13], "page": [1, 2, 5, 9], "regard": [1, 2], "specif": [1, 2], "command": [1, 2], "your": [1, 2, 9], "platform": [1, 2], "ha": [1, 2, 9], "been": [1, 2, 9], "follow": [1, 2, 13], "here": [1, 2], "also": [1, 2, 9], "one": [1, 2, 9, 11, 12, 13], "both": [1, 2, 9, 13], "tensorflow": [1, 2], "2": [1, 2, 9, 10, 11, 13], "clone": [1, 2], "repositori": [1, 2, 10], "run": [1, 2, 11, 12], "git": [1, 2], "http": [1, 2, 9, 10, 11], "github": [1, 2, 9, 10, 11], "com": [1, 2, 9, 10, 11], "hic": 1, "aix": 1, "cd": [1, 2], "updat": [1, 7, 13], "should": [1, 9, 11, 12], "upgrad": [1, 2], "transform": [1, 9, 11], "its": 1, "pull": [1, 2], "zjuai": 2, "an": [5, 9, 11, 13], "sourc": [5, 8, 9, 10, 11, 12, 13], "pre": [5, 11], "train": [5, 7, 8, 10, 11, 12], "support": [5, 9], "multipl": [5, 9, 13], "downstream": [5, 12], "task": [5, 6, 7], "index": [5, 9], "modul": [5, 6], "search": 5, "quickstart": 5, "instal": 5, "creat": 5, "environ": [5, 9], "With": 5, "pip": 5, "code": [5, 9], "tutori": 5, "submodul": [5, 6, 7], "factori": [5, 6, 7], "process": [5, 6, 7, 12], "content": [5, 6], "ec": [5, 6, 7], "flip": [5, 6, 7], "go": [5, 6, 7, 12], "tape": [5, 6, 7], "metric": [5, 6, 7], "packag": 6, "subpackag": 6, "core": [6, 7], "rule": [6, 7], "setup": [6, 7], "compon": [7, 8], "globalconfigur": [7, 8], "register_compon": [7, 8], "set_cont": [7, 8], "globalutil": [7, 8], "log": [7, 8], "sy": [7, 8], "tree": [7, 8, 10], "get_data": [7, 9, 10], "datafactori": [7, 9], "load": [7, 9, 11], "ptdatafactori": [7, 9], "dataload": [7, 9], "ptdataset": [7, 9], "encod": [7, 9, 11], "get_idx": [7, 9, 11], "get_tok": [7, 9, 11], "pad": [7, 9, 11], "to_dict": [7, 9, 11], "token": [7, 9, 11, 12], "fairseqincrementalst": [7, 11], "get_incremental_st": [7, 11], "init_incremental_st": [7, 11], "set_incremental_st": [7, 11], "learnedpositionalembed": [7, 11], "embedding_dim": [7, 11], "forward": [7, 11, 12], "max_norm": [7, 11], "norm_typ": [7, 11], "num_embed": [7, 11], "scale_grad_by_freq": [7, 11], "spars": [7, 11], "weight": [7, 11, 13], "multiheadattent": [7, 11], "apply_sparse_mask": [7, 11], "prepare_for_onnx_export_": [7, 11], "reorder_incremental_st": [7, 11], "reset_paramet": [7, 11], "upgrade_state_dict_nam": [7, 11], "proteinbertmodel": [7, 11], "transformerlay": [7, 11], "gelu": [7, 11, 13], "utils_softmax": [7, 11], "with_incremental_st": [7, 11], "proteinfunctiondecod": [7, 12], "args_pars": [7, 12], "sequenceregressiondecod": [7, 12], "proteincontactmapdecod": [7, 12], "sequenceclassificaitondecod": [7, 12], "sequencetosequenceclassificaitondecod": [7, 12], "compute_onc": [7, 13], "meansquarederror": [7, 13], "reset": [7, 13], "spearman": [7, 13], "convert_to_byt": [7, 13], "convert_to_str": [7, 13], "class": [8, 9, 10, 11, 12, 13], "name": [8, 9, 11], "base": [8, 9, 10, 11, 12, 13], "attr": 8, "type": [8, 9, 10, 11, 13], "kwarg": [8, 9, 11], "object": [8, 9, 11, 12, 13], "obj": [8, 13], "userdict": 8, "path": [9, 10, 11], "basic": 9, "interfac": 9, "The": [9, 10, 11, 13], "method": [9, 13], "defin": [9, 11, 12, 13], "all": [9, 10, 11, 12], "subclass": [9, 11, 12, 13], "implement": [9, 11, 13], "paramet": [9, 10, 11, 12, 13], "str": [9, 10, 11, 13], "get": [9, 11], "instanc": [9, 11, 12], "current": [9, 13], "No": [9, 13], "return": [9, 11, 13], "batch_siz": [9, 10], "option": [9, 11, 13], "int": [9, 11, 12, 13], "shuffl": 9, "bool": [9, 11, 12, 13], "fals": [9, 11, 13], "sampler": 9, "batch_sampl": 9, "num_work": 9, "pin_memori": 9, "drop_last": 9, "For": [9, 11, 13], "detail": [9, 11], "see": [9, 11, 13], "org": [9, 10], "doc": 9, "stabl": 9, "html": 9, "how": [9, 13], "mani": 9, "sampl": [9, 13], "per": 9, "batch": [9, 11], "default": [9, 11, 12, 13], "set": [9, 10, 11], "reshuffl": 9, "everi": [9, 11, 12], "epoch": 9, "iter": 9, "strategi": 9, "draw": 9, "like": [9, 13], "indic": [9, 11], "time": [9, 11], "subprocess": 9, "callabl": 9, "merg": 9, "list": [9, 11, 13], "form": 9, "mini": 9, "tensor": [9, 10, 11], "If": [9, 13], "loader": 9, "copi": 9, "devic": 9, "cuda": 9, "pin": 9, "memori": 9, "befor": [9, 11], "them": [9, 11, 12], "drop": 9, "last": 9, "incomplet": 9, "divis": 9, "smaller": 9, "static": 9, "differ": [9, 11, 13], "runtim": 9, "file": 9, "uniref50": [9, 10], "gener": [9, 11, 13], "rais": [9, 13], "importerror": 9, "t_co": 9, "sequenc": [9, 10, 11, 12], "ani": 9, "timeout": 9, "float": [9, 11, 13], "worker_init_fn": 9, "multiprocessing_context": 9, "prefetch_factor": 9, "persistent_work": 9, "combin": [9, 13], "provid": [9, 10], "over": [9, 11], "given": [9, 13], "map": 9, "style": 9, "singl": [9, 10, 13], "multi": [9, 11], "custom": 9, "order": 9, "automat": 9, "collat": 9, "document": 9, "more": [9, 11], "which": [9, 10], "__len__": 9, "specifi": 9, "must": [9, 13], "mutual": 9, "exclus": 9, "main": 9, "element": [9, 11], "below": [9, 13], "numer": 9, "posit": [9, 11, 13], "valu": [9, 10, 11, 13], "collect": 9, "worker": 9, "alwai": 9, "non": [9, 13], "neg": [9, 13], "call": [9, 11, 12], "each": [9, 11, 13], "id": [9, 11], "input": [9, 11, 13], "after": 9, "seed": 9, "rng": 9, "randomsampl": 9, "random": 9, "multiprocess": 9, "base_se": 9, "keyword": 9, "onli": [9, 13], "advanc": 9, "total": [9, 13], "prefetch": 9, "across": 9, "shutdown": 9, "consum": 9, "onc": 9, "allow": 9, "maintain": 9, "aliv": 9, "spawn": 9, "start": 9, "cannot": 9, "unpickl": 9, "best": [9, 13], "practic": 9, "relat": [9, 10], "len": 9, "heurist": 9, "length": [9, 13], "iterabledataset": 9, "instead": [9, 11, 12], "estim": [9, 13], "proper": 9, "round": 9, "regardless": 9, "configur": 9, "repres": [9, 13], "guess": 9, "make": 9, "becaus": 9, "trust": 9, "user": 9, "correctli": [9, 13], "handl": [9, 13], "avoid": 9, "duplic": 9, "howev": 9, "shard": 9, "still": 9, "inaccur": 9, "otherwis": [9, 13], "complet": 9, "broken": 9, "ones": 9, "worth": 9, "unfortun": 9, "detect": 9, "case": [9, 13], "_": 9, "two": [9, 13], "interact": 9, "reproduc": 9, "note": [9, 13], "question": 9, "check_worker_number_ration": 9, "properti": 9, "abstract": [9, 13], "kei": [9, 11], "overwrit": 9, "__getitem__": 9, "fetch": 9, "could": 9, "expect": [9, 11], "construct": 9, "yield": 9, "integr": 9, "To": 9, "work": 9, "dict": [9, 11], "concat": 9, "functool": 9, "partial": 9, "register_datapipe_as_funct": 9, "local": 9, "class_funct": 9, "datapip": 9, "concatermapdatapip": 9, "mappermapdatapip": 9, "classmethod": [9, 11], "function_nam": 9, "cls_to_regist": 9, "enable_df_api_trac": 9, "register_funct": 9, "lmdb_path": 9, "lmdb": 9, "standard_tok": [9, 11], "prepend_tok": [9, 11], "null_0": [9, 11], "eo": [9, 11], "unk": [9, 11], "append_tok": [9, 11], "cl": [9, 11], "mask": [9, 11], "sep": [9, 11], "prepend_bo": [9, 11], "append_eo": [9, 11], "text": [9, 11], "ind": [9, 11], "inspir": [9, 11], "huggingfac": [9, 11], "blob": [9, 11], "master": [9, 10, 11], "src": [9, 11], "tokenization_util": [9, 11], "py": [9, 11], "string": [9, 11, 13], "enzym": 10, "databas": 10, "2000": [10, 13], "inform": [10, 11, 13], "nomenclatur": 10, "flatironinstitut": 10, "deepfri": 10, "preprocess": 10, "data_path": 10, "mahhhhhhmalvsmrqlldhaaensyglpafnvnnleqmraimeaadqvnapvivqasagarkyagapflrhlilaaveefphipvvmhqdhgaspdvcqrsiqlgfssvmmdgslledgktpssyeynvnatrtvvnfshacgvsvegeigvlgnletgeageedgvgaagklshdqmltsvedavrfvkdtgvdalaiavgtshgaykftrpptgdvlridrikeihqalpnthivmhgsssvpqewlkvineyggnigetygvpveeivegikhgvrkvnidtdlrlastgavrrylaenpsdfdprkylgktieamkqicldrylafgcegqagkikpvslekmasryakgelnqivk": 10, "arrai": [10, 13], "manrshhnaghramnalrksgqkhssesqlgsseigttrhvydvcdcldtlaklpddsvqliicdppynimladwddhmdyigwakrwlaeaervlsptgsiaifgglqyqgeagsgdlisiishmrqnskmllanliiwnypngmsaqrffanrheeiawfaktkkyffdldavrepydeetkaaymkdkrlnpesvekgrnptnvwrmsrlngnslervghptqkpaavierlvralshpgstvldffagsgvtarvaiqegrnsictdaapvfkeyyqkqltflqddglidkarsyeivegaanfgaalqrgdva": 10, "benchmark": 10, "predict": [10, 13], "encourag": 10, "rapid": 10, "score": [10, 13], "represent": 10, "learn": [10, 11], "engin": 10, "mqyklilngktlkgettteavdaataekvfkqyandngvdgewtyddatktftvtelevlfqgpldpnsmatyevlcevarklgtddrevvlfllnvfipqptlaqligalralkeegrltfpllaeclfragrrdllrdllhldprflerhlagtmsyfspyqltvlhvdgelcardirsliflskdtigsrstpqtflhwvycmenldllgptdvdalmsmlrslsrvdlqrqvqtlmglhlsgpshsqhyrhtplehhhhhh": 10, "mqyklilngktlkgettteavdaataekvfkqyandngidgewtyddatktftvtelevlfqgpldpnsmatyevlcevarklgtddrevvlfllnvfipqptlaqligalralkeegrltfpllaeclfragrrdllrdllhldprflerhlagtmsyfspyqltvlhvdgelcardirsliflskdtigsrstpqtflhwvycmenldllgptdvdalmsmlrslsrvdlqrqvqtlmglhlsgpshsqhyrhtplehhhhhh": 10, "goal": 10, "gene": 10, "ontologi": 10, "consortium": 10, "produc": 10, "dynam": 10, "control": 10, "vocabulari": 10, "appli": [10, 11], "eukaryot": 10, "even": 10, "knowledg": 10, "role": 10, "cell": 10, "accumul": 10, "chang": 10, "resourc": 10, "mkwtnagsrrgskkaapsarplpvnlrlndfsddelhlatrrstgnspdappqaervgysqltvliaelrrssrlgrstcaevtrhypaiiyvfvftrclpqpnscst": 10, "msisdtvkrareafnsgktrslqfriqqlealqrminenlksisgalasdlgknewtsyyeevahvleeldttikelpdwaedepvaktrqtqqddlyihseplgvvlvigawnypfnltiqpmvgavaagnavilkpsevsghmadllatlipqymdqnlylvvkggvpettellkerfdhimytgstavgkivmaaaakhltpvtlelggkspcyvdkdcdldvacrriawgkfmnsgqtcvapdyilcdpsiqnqiveklkkslkdfygedakqsrdygriindrhfqrvkglidnqkvahggtwdqssryiaptilvdvdpqspvmqeeifgpvmpivcvrsleeaiqfinqrekplalyvfsnnekvikkmiaetssggvtandvivhitvptlpfggvgnsgmgayhgkksfetfshrrsclvksllneeahkaryppspakmprh": 10, "iiggheakphsrpymaylqimdeysgskkcggfliredfvltaahcsgskiqvtlgahnikeqekmqqiipvvkiiphpaynsktisndimllklkskakrssavkplnlprrnvkvkpgdvcyvagwgklgpmgkysdtlqeveltvqedqkcesylknyfdkaneicagdpkikrasfrgdsggplvckkvaagivsygqndgstpraftkvstflswikktmkk": 10, "gb1": 10, "four": 10, "variat": 10, "stem": 10, "elifesci": 10, "articl": 10, "16965": 10, "mutat": 10, "site": 10, "v39": 10, "d40": 10, "g41": 10, "v54": 10, "were": 10, "probe": 10, "against": 10, "bind": 10, "assai": 10, "split": 10, "regress": [10, 13], "fitt": 10, "report": 10, "figur": 10, "sd1": 10, "one_vs_rest": 10, "wild": 10, "everyth": 10, "els": 10, "primari": 10, "skgeelftgvvpilveldgdvnghkfsvsgegegdatygkltlkficttgklpvpwptlvttlsygvqcfsrypdhmkqhdffksampegyvqertiffkddgnyktrdevkfegdtlvnrielkgidfkedgnilghkleynydshnvyimadkqkngikvnfkirhniedgsvqladhyqqntpvgdgpvllpdnhylstqsalskdpnekrdhmvllefvtaagithgtdepyk": 10, "skgeelftgvvpilveldgdvnghkfsvsgegegdatygkltlkficttgklpvpwptlvttlsygvqcfsrypdhmkqhdffksampegyvqertiffkddgnyktrdevkfegdtlvnrielkgidfkedgnilghklennynslnvyimadkqkngikvnfkirhniedgsvqladhyqqntpigdgpvllpdnhylstqsalskdpnekrdhmvllgfvtaagithgmdelyk": 10, "protein_length": 10, "237": 10, "log_fluoresc": 10, "3010": 10, "3012": 10, "num_mut": 10, "4": [10, 13], "uniprot": 10, "cluster": 10, "uniprotkb": 10, "select": 10, "uniparc": 10, "record": 10, "j": 10, "32": 10, "15": 10, "21": 10, "11": 10, "18": 10, "incremental_st": 11, "helper": 11, "increment": 11, "state": 11, "embed": [11, 12], "up": 11, "fix": 11, "maximum": 11, "ignor": [11, 12, 13], "either": 11, "offset": 11, "ensur": 11, "appropri": 11, "pass": [11, 12], "bsz": 11, "seqlen": 11, "num_head": 11, "kdim": 11, "vdim": 11, "dropout": 11, "bia": 11, "add_bias_kv": 11, "add_zero_attn": 11, "self_attent": 11, "encoder_decoder_attent": 11, "head": 11, "attent": 11, "tgt_len": 11, "src_len": 11, "queri": 11, "key_padding_mask": 11, "need_weight": 11, "static_kv": 11, "attn_mask": 11, "before_softmax": 11, "need_head_weight": 11, "tupl": 11, "shape": [11, 13], "channel": 11, "bytetensor": 11, "exclud": 11, "where": 11, "averag": 11, "typic": 11, "causal": 11, "prevent": 11, "look": 11, "raw": 11, "softmax": 11, "impli": 11, "new_ord": 11, "reorder": 11, "buffer": 11, "intern": [11, 13], "state_dict": 11, "roberta": 11, "larg": 11, "architectur": 11, "layer_num": 11, "layer": 11, "dimens": [11, 12, 13], "feedforward": 11, "network": 11, "attention_head_num": 11, "max_position_num": 11, "whether": 11, "norm": 11, "checkpoint": 11, "repr_lay": 11, "comput": [11, 12], "perform": [11, 12, 13], "overridden": [11, 12], "although": [11, 12], "recip": [11, 12], "within": [11, 12], "afterward": [11, 12], "sinc": [11, 12], "former": [11, 12], "take": [11, 12], "care": [11, 12], "regist": [11, 12], "hook": [11, 12], "while": [11, 12, 13], "latter": [11, 12], "silent": [11, 12], "block": 11, "self_attn_mask": 11, "self_attn_padding_mask": 11, "openai": [11, 13], "gpt": [11, 13], "slightli": [11, 13], "give": [11, 13], "tanh": [11, 13], "math": [11, 13], "sqrt": [11, 13], "pi": [11, 13], "044715": [11, 13], "pow": [11, 13], "dim": 11, "onnx_trac": 11, "alia": 11, "class_num": 12, "format": 12, "requir": [12, 13], "prev_result": 12, "seq": 12, "dictionari": 12, "amino": 12, "acid": 12, "stabil": 12, "fluoresc": 12, "proteinnet": 12, "label_num": 12, "remote_homologi": 12, "secondary_structur": 12, "normal": 13, "sample_weight": 13, "calcul": 13, "classif": 13, "classifi": 13, "fraction": 13, "n_sampl": 13, "In": 13, "binari": 13, "equal": 13, "jaccard_scor": 13, "acc": 13, "y_true": 13, "y_pred": 13, "pred": 13, "ground": 13, "truth": 13, "multioutput": 13, "uniform_averag": 13, "squar": 13, "error": 13, "raw_valu": 13, "n_output": 13, "aggreg": 13, "output": 13, "mse": 13, "rmse": 13, "7": 13, "375": 13, "correct": 13, "target": 13, "point": 13, "individu": 13, "ndarrai": 13, "three": 13, "other": 13, "rewrit": 13, "evalu": 13, "axi": 13, "nan_polici": 13, "propag": 13, "altern": 13, "side": 13, "correl": 13, "coeffici": 13, "associ": 13, "column": 13, "variabl": 13, "observ": 13, "row": 13, "relationship": 13, "transpos": 13, "contain": 13, "ravel": 13, "omit": 13, "nan": 13, "avail": 13, "throw": 13, "less": 13, "hypothesi": 13, "nonzero": 13, "zero": 13, "spe": 13, "8207826816681233": 13, "1d": 13, "2d": 13, "array_lik": 13, "One": 13, "vector": 13, "behavior": 13, "under": 13, "same": 13, "matrix": 13, "zwilling": 13, "kokoska": 13, "crc": 13, "standard": 13, "probabl": 13, "statist": 13, "tabl": 13, "formula": 13, "chapman": 13, "hall": 13, "new": 13, "york": 13, "section": 13, "14": 13, "union": 13, "byte": 13, "param": 13, "valueerror": 13, "typeerror": 13}, "objects": {"": [[7, 0, 0, "-", "openprotein"]], "openprotein": [[8, 0, 0, "-", "core"], [9, 0, 0, "-", "data"], [10, 0, 0, "-", "datasets"], [11, 0, 0, "-", "models"], [12, 0, 0, "-", "task"], [13, 0, 0, "-", "utils"]], "openprotein.core": [[8, 1, 1, "", "Components"], [8, 1, 1, "", "GlobalConfiguration"], [8, 1, 1, "", "Tree"], [8, 0, 0, "-", "rule"], [8, 0, 0, "-", "setup"]], "openprotein.core.GlobalConfiguration": [[8, 2, 1, "", "register_component"], [8, 2, 1, "", "set_content"]], "openprotein.core.setup": [[8, 1, 1, "", "Components"], [8, 1, 1, "", "GlobalConfiguration"], [8, 1, 1, "", "GlobalUtils"], [8, 1, 1, "", "Tree"]], "openprotein.core.setup.GlobalConfiguration": [[8, 2, 1, "", "register_component"], [8, 2, 1, "", "set_content"]], "openprotein.core.setup.GlobalUtils": [[8, 3, 1, "", "data"], [8, 3, 1, "", "logging"], [8, 3, 1, "", "sys"], [8, 3, 1, "", "train"]], "openprotein.data": [[9, 1, 1, "", "Alphabet"], [9, 1, 1, "", "DataFactory"], [9, 1, 1, "", "MaskedConverter"], [9, 0, 0, "-", "factory"], [9, 0, 0, "-", "process"]], "openprotein.data.Alphabet": [[9, 2, 1, "", "build_alphabet"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "get_idx"], [9, 2, 1, "", "get_tok"], [9, 2, 1, "", "pad"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "tokenize"]], "openprotein.data.DataFactory": [[9, 2, 1, "", "load"]], "openprotein.data.MaskedConverter": [[9, 2, 1, "", "build_convert"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "get_idx"], [9, 2, 1, "", "tokenize"]], "openprotein.data.factory": [[9, 1, 1, "", "Data"], [9, 1, 1, "", "DataFactory"], [9, 1, 1, "", "PTDataFactory"]], "openprotein.data.factory.Data": [[9, 2, 1, "", "get_data"], [9, 2, 1, "", "get_dataloader"]], "openprotein.data.factory.DataFactory": [[9, 2, 1, "", "load"]], "openprotein.data.factory.PTDataFactory": [[9, 1, 1, "", "DataLoader"], [9, 1, 1, "", "Dataset"], [9, 1, 1, "", "PTDataset"], [9, 2, 1, "", "get_data"], [9, 2, 1, "", "get_dataloader"]], "openprotein.data.factory.PTDataFactory.DataLoader": [[9, 3, 1, "", "batch_size"], [9, 2, 1, "", "check_worker_number_rationality"], [9, 3, 1, "", "dataset"], [9, 3, 1, "", "drop_last"], [9, 4, 1, "", "multiprocessing_context"], [9, 3, 1, "", "num_workers"], [9, 3, 1, "", "pin_memory"], [9, 3, 1, "", "prefetch_factor"], [9, 3, 1, "", "sampler"], [9, 3, 1, "", "timeout"]], "openprotein.data.factory.PTDataFactory.Dataset": [[9, 3, 1, "", "functions"], [9, 2, 1, "", "register_datapipe_as_function"], [9, 2, 1, "", "register_function"]], "openprotein.data.process": [[9, 1, 1, "", "Alphabet"], [9, 1, 1, "", "MaskedConverter"]], "openprotein.data.process.Alphabet": [[9, 2, 1, "", "build_alphabet"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "get_idx"], [9, 2, 1, "", "get_tok"], [9, 2, 1, "", "pad"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "tokenize"]], "openprotein.data.process.MaskedConverter": [[9, 2, 1, "", "build_convert"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "get_idx"], [9, 2, 1, "", "tokenize"]], "openprotein.datasets": [[10, 1, 1, "", "EC"], [10, 1, 1, "", "Flip"], [10, 1, 1, "", "GO"], [10, 1, 1, "", "Tape"], [10, 1, 1, "", "Uniref"], [10, 0, 0, "-", "ec"], [10, 0, 0, "-", "flip"], [10, 0, 0, "-", "go"], [10, 0, 0, "-", "tape"], [10, 0, 0, "-", "uniref"]], "openprotein.datasets.ec": [[10, 1, 1, "", "EC"]], "openprotein.datasets.flip": [[10, 1, 1, "", "Flip"]], "openprotein.datasets.go": [[10, 1, 1, "", "GO"]], "openprotein.datasets.tape": [[10, 1, 1, "", "Tape"]], "openprotein.datasets.uniref": [[10, 1, 1, "", "Uniref"]], "openprotein.models": [[11, 3, 1, "", "Esm1b"], [11, 0, 0, "-", "esm1b"]], "openprotein.models.esm1b": [[11, 1, 1, "", "Alphabet"], [11, 1, 1, "", "FairseqIncrementalState"], [11, 1, 1, "", "LearnedPositionalEmbedding"], [11, 1, 1, "", "MultiheadAttention"], [11, 1, 1, "", "ProteinBertModel"], [11, 1, 1, "", "TransformerLayer"], [11, 5, 1, "", "gelu"], [11, 5, 1, "", "utils_softmax"], [11, 5, 1, "", "with_incremental_state"]], "openprotein.models.esm1b.Alphabet": [[11, 2, 1, "", "build_alphabet"], [11, 2, 1, "", "encode"], [11, 2, 1, "", "get_idx"], [11, 2, 1, "", "get_tok"], [11, 2, 1, "", "pad"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "tokenize"]], "openprotein.models.esm1b.FairseqIncrementalState": [[11, 2, 1, "", "get_incremental_state"], [11, 2, 1, "", "init_incremental_state"], [11, 2, 1, "", "set_incremental_state"]], "openprotein.models.esm1b.LearnedPositionalEmbedding": [[11, 3, 1, "", "embedding_dim"], [11, 2, 1, "", "forward"], [11, 3, 1, "", "max_norm"], [11, 3, 1, "", "norm_type"], [11, 3, 1, "", "num_embeddings"], [11, 3, 1, "", "padding_idx"], [11, 3, 1, "", "scale_grad_by_freq"], [11, 3, 1, "", "sparse"], [11, 3, 1, "", "weight"]], "openprotein.models.esm1b.MultiheadAttention": [[11, 2, 1, "", "apply_sparse_mask"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "prepare_for_onnx_export_"], [11, 2, 1, "", "reorder_incremental_state"], [11, 2, 1, "", "reset_parameters"], [11, 3, 1, "", "training"], [11, 2, 1, "", "upgrade_state_dict_named"]], "openprotein.models.esm1b.ProteinBertModel": [[11, 2, 1, "", "forward"], [11, 2, 1, "", "load"], [11, 3, 1, "", "training"]], "openprotein.models.esm1b.TransformerLayer": [[11, 2, 1, "", "forward"], [11, 3, 1, "", "training"]], "openprotein.task": [[12, 0, 0, "-", "ec"], [12, 0, 0, "-", "flip"], [12, 0, 0, "-", "tape"]], "openprotein.task.ec": [[12, 1, 1, "", "ProteinFunctionDecoder"]], "openprotein.task.ec.ProteinFunctionDecoder": [[12, 2, 1, "", "forward"], [12, 3, 1, "", "training"]], "openprotein.task.flip": [[12, 1, 1, "", "Args"], [12, 1, 1, "", "Convert"], [12, 1, 1, "", "SequenceRegressionDecoder"]], "openprotein.task.flip.Args": [[12, 2, 1, "", "args_parser"]], "openprotein.task.flip.SequenceRegressionDecoder": [[12, 2, 1, "", "forward"], [12, 3, 1, "", "training"]], "openprotein.task.tape": [[12, 1, 1, "", "ProteinContactMapDecoder"], [12, 1, 1, "", "SequenceClassificaitonDecoder"], [12, 1, 1, "", "SequenceToSequenceClassificaitonDecoder"]], "openprotein.task.tape.ProteinContactMapDecoder": [[12, 2, 1, "", "forward"], [12, 3, 1, "", "training"]], "openprotein.task.tape.SequenceClassificaitonDecoder": [[12, 2, 1, "", "forward"], [12, 3, 1, "", "training"]], "openprotein.task.tape.SequenceToSequenceClassificaitonDecoder": [[12, 2, 1, "", "forward"], [12, 3, 1, "", "training"]], "openprotein.utils": [[13, 1, 1, "", "Accuracy"], [13, 1, 1, "", "MeanSquaredError"], [13, 1, 1, "", "Spearman"], [13, 0, 0, "-", "activation"], [13, 5, 1, "", "convert_to_bytes"], [13, 5, 1, "", "convert_to_str"], [13, 5, 1, "", "gelu"], [13, 0, 0, "-", "metrics"], [13, 0, 0, "-", "utils"]], "openprotein.utils.Accuracy": [[13, 2, 1, "", "compute_once"]], "openprotein.utils.MeanSquaredError": [[13, 2, 1, "", "compute_once"]], "openprotein.utils.Spearman": [[13, 2, 1, "", "compute_once"]], "openprotein.utils.activation": [[13, 5, 1, "", "gelu"]], "openprotein.utils.metrics": [[13, 1, 1, "", "Accuracy"], [13, 1, 1, "", "MeanSquaredError"], [13, 1, 1, "", "Metric"], [13, 1, 1, "", "Spearman"]], "openprotein.utils.metrics.Accuracy": [[13, 2, 1, "", "compute_once"]], "openprotein.utils.metrics.MeanSquaredError": [[13, 2, 1, "", "compute_once"]], "openprotein.utils.metrics.Metric": [[13, 2, 1, "", "compute_once"], [13, 2, 1, "", "reset"], [13, 2, 1, "", "update"]], "openprotein.utils.metrics.Spearman": [[13, 2, 1, "", "compute_once"]], "openprotein.utils.utils": [[13, 5, 1, "", "convert_to_bytes"], [13, 5, 1, "", "convert_to_str"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"exampl": [0, 4], "code": 0, "instal": [1, 2], "creat": [1, 2], "environ": [1, 2], "With": [1, 2], "pip": [1, 2], "from": [1, 2], "sourc": [1, 2], "quickstart": 3, "tutori": 4, "open": 5, "protein": 5, "A": 5, "deep": 5, "learn": 5, "platform": 5, "get": 5, "start": 5, "document": 5, "src": 6, "openprotein": [7, 8, 9, 10, 11, 12, 13], "packag": [7, 8, 9, 10, 11, 12, 13], "subpackag": 7, "modul": [7, 8, 9, 10, 11, 12, 13], "content": [7, 8, 9, 10, 11, 12, 13], "core": 8, "submodul": [8, 9, 10, 11, 12, 13], "rule": 8, "setup": 8, "data": 9, "factori": 9, "process": 9, "dataset": 10, "ec": [10, 12], "flip": [10, 12], "go": 10, "tape": [10, 12], "uniref": 10, "model": 11, "esm1b": 11, "task": 12, "util": 13, "activ": 13, "metric": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Example": [[0, "example"], [4, "example"]], "Code Example": [[0, "code-example"]], "Install": [[1, "install"], [2, "install"]], "Create environment": [[1, "create-environment"], [2, "create-environment"]], "With Pip": [[1, "with-pip"]], "From source": [[1, "from-source"]], "With pip": [[2, "with-pip"]], "From Source": [[2, "from-source"]], "QuickStart": [[3, "quickstart"]], "Tutorials": [[4, "tutorials"]], "Open-Protein - A deep learning platform": [[5, "open-protein-a-deep-learning-platform"]], "GETTING STARTED": [[5, null]], "Documentation": [[5, null]], "src": [[6, "src"]], "openprotein package": [[7, "openprotein-package"]], "Subpackages": [[7, "subpackages"]], "Module contents": [[7, "module-openprotein"], [8, "module-openprotein.core"], [9, "module-openprotein.data"], [10, "module-openprotein.datasets"], [11, "module-openprotein.models"], [12, "module-openprotein.task"], [13, "module-openprotein.utils"]], "openprotein.core package": [[8, "openprotein-core-package"]], "Submodules": [[8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"]], "openprotein.core.rule module": [[8, "module-openprotein.core.rule"]], "openprotein.core.setup module": [[8, "module-openprotein.core.setup"]], "openprotein.data package": [[9, "openprotein-data-package"]], "openprotein.data.factory module": [[9, "module-openprotein.data.factory"]], "openprotein.data.process module": [[9, "module-openprotein.data.process"]], "openprotein.datasets package": [[10, "openprotein-datasets-package"]], "openprotein.datasets.ec module": [[10, "module-openprotein.datasets.ec"]], "openprotein.datasets.flip module": [[10, "module-openprotein.datasets.flip"]], "openprotein.datasets.go module": [[10, "module-openprotein.datasets.go"]], "openprotein.datasets.tape module": [[10, "module-openprotein.datasets.tape"]], "openprotein.datasets.uniref module": [[10, "module-openprotein.datasets.uniref"]], "openprotein.models package": [[11, "openprotein-models-package"]], "openprotein.models.esm1b module": [[11, "module-openprotein.models.esm1b"]], "openprotein.task package": [[12, "openprotein-task-package"]], "openprotein.task.ec module": [[12, "module-openprotein.task.ec"]], "openprotein.task.flip module": [[12, "module-openprotein.task.flip"]], "openprotein.task.tape module": [[12, "module-openprotein.task.tape"]], "openprotein.utils package": [[13, "openprotein-utils-package"]], "openprotein.utils.activation module": [[13, "module-openprotein.utils.activation"]], "openprotein.utils.metrics module": [[13, "module-openprotein.utils.metrics"]], "openprotein.utils.utils module": [[13, "module-openprotein.utils.utils"]]}, "indexentries": {"module": [[7, "module-openprotein"], [8, "module-openprotein.core"], [8, "module-openprotein.core.rule"], [8, "module-openprotein.core.setup"], [9, "module-openprotein.data"], [9, "module-openprotein.data.factory"], [9, "module-openprotein.data.process"], [10, "module-openprotein.datasets"], [10, "module-openprotein.datasets.ec"], [10, "module-openprotein.datasets.flip"], [10, "module-openprotein.datasets.go"], [10, "module-openprotein.datasets.tape"], [10, "module-openprotein.datasets.uniref"], [11, "module-openprotein.models"], [11, "module-openprotein.models.esm1b"], [12, "module-openprotein.task"], [12, "module-openprotein.task.ec"], [12, "module-openprotein.task.flip"], [12, "module-openprotein.task.tape"], [13, "module-openprotein.utils"], [13, "module-openprotein.utils.activation"], [13, "module-openprotein.utils.metrics"], [13, "module-openprotein.utils.utils"]], "openprotein": [[7, "module-openprotein"]], "components (class in openprotein.core)": [[8, "openprotein.core.Components"]], "components (class in openprotein.core.setup)": [[8, "openprotein.core.setup.Components"]], "globalconfiguration (class in openprotein.core)": [[8, "openprotein.core.GlobalConfiguration"]], "globalconfiguration (class in openprotein.core.setup)": [[8, "openprotein.core.setup.GlobalConfiguration"]], "globalutils (class in openprotein.core.setup)": [[8, "openprotein.core.setup.GlobalUtils"]], "tree (class in openprotein.core)": [[8, "openprotein.core.Tree"]], "tree (class in openprotein.core.setup)": [[8, "openprotein.core.setup.Tree"]], "data (openprotein.core.setup.globalutils attribute)": [[8, "openprotein.core.setup.GlobalUtils.data"]], "logging (openprotein.core.setup.globalutils attribute)": [[8, "openprotein.core.setup.GlobalUtils.logging"]], "openprotein.core": [[8, "module-openprotein.core"]], "openprotein.core.rule": [[8, "module-openprotein.core.rule"]], "openprotein.core.setup": [[8, "module-openprotein.core.setup"]], "register_component() (openprotein.core.globalconfiguration method)": [[8, "openprotein.core.GlobalConfiguration.register_component"]], "register_component() (openprotein.core.setup.globalconfiguration method)": [[8, "openprotein.core.setup.GlobalConfiguration.register_component"]], "set_content() (openprotein.core.globalconfiguration method)": [[8, "openprotein.core.GlobalConfiguration.set_content"]], "set_content() (openprotein.core.setup.globalconfiguration method)": [[8, "openprotein.core.setup.GlobalConfiguration.set_content"]], "sys (openprotein.core.setup.globalutils attribute)": [[8, "openprotein.core.setup.GlobalUtils.sys"]], "train (openprotein.core.setup.globalutils attribute)": [[8, "openprotein.core.setup.GlobalUtils.train"]], "alphabet (class in openprotein.data)": [[9, "openprotein.data.Alphabet"]], "alphabet (class in openprotein.data.process)": [[9, "openprotein.data.process.Alphabet"]], "data (class in openprotein.data.factory)": [[9, "openprotein.data.factory.Data"]], "datafactory (class in openprotein.data)": [[9, "openprotein.data.DataFactory"]], "datafactory (class in openprotein.data.factory)": [[9, "openprotein.data.factory.DataFactory"]], "maskedconverter (class in openprotein.data)": [[9, "openprotein.data.MaskedConverter"]], "maskedconverter (class in openprotein.data.process)": [[9, "openprotein.data.process.MaskedConverter"]], "ptdatafactory (class in openprotein.data.factory)": [[9, "openprotein.data.factory.PTDataFactory"]], "ptdatafactory.dataloader (class in openprotein.data.factory)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader"]], "ptdatafactory.dataset (class in openprotein.data.factory)": [[9, "openprotein.data.factory.PTDataFactory.Dataset"]], "ptdatafactory.ptdataset (class in openprotein.data.factory)": [[9, "openprotein.data.factory.PTDataFactory.PTDataset"]], "batch_size (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.batch_size"]], "build_alphabet() (openprotein.data.alphabet class method)": [[9, "openprotein.data.Alphabet.build_alphabet"]], "build_alphabet() (openprotein.data.process.alphabet class method)": [[9, "openprotein.data.process.Alphabet.build_alphabet"]], "build_convert() (openprotein.data.maskedconverter class method)": [[9, "openprotein.data.MaskedConverter.build_convert"]], "build_convert() (openprotein.data.process.maskedconverter class method)": [[9, "openprotein.data.process.MaskedConverter.build_convert"]], "check_worker_number_rationality() (openprotein.data.factory.ptdatafactory.dataloader method)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.check_worker_number_rationality"]], "dataset (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.dataset"]], "drop_last (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.drop_last"]], "encode() (openprotein.data.alphabet method)": [[9, "openprotein.data.Alphabet.encode"]], "encode() (openprotein.data.maskedconverter method)": [[9, "openprotein.data.MaskedConverter.encode"]], "encode() (openprotein.data.process.alphabet method)": [[9, "openprotein.data.process.Alphabet.encode"]], "encode() (openprotein.data.process.maskedconverter method)": [[9, "openprotein.data.process.MaskedConverter.encode"]], "functions (openprotein.data.factory.ptdatafactory.dataset attribute)": [[9, "openprotein.data.factory.PTDataFactory.Dataset.functions"]], "get_data() (openprotein.data.factory.data method)": [[9, "openprotein.data.factory.Data.get_data"]], "get_data() (openprotein.data.factory.ptdatafactory method)": [[9, "openprotein.data.factory.PTDataFactory.get_data"]], "get_dataloader() (openprotein.data.factory.data method)": [[9, "openprotein.data.factory.Data.get_dataloader"]], "get_dataloader() (openprotein.data.factory.ptdatafactory method)": [[9, "openprotein.data.factory.PTDataFactory.get_dataloader"]], "get_idx() (openprotein.data.alphabet method)": [[9, "openprotein.data.Alphabet.get_idx"]], "get_idx() (openprotein.data.maskedconverter method)": [[9, "openprotein.data.MaskedConverter.get_idx"]], "get_idx() (openprotein.data.process.alphabet method)": [[9, "openprotein.data.process.Alphabet.get_idx"]], "get_idx() (openprotein.data.process.maskedconverter method)": [[9, "openprotein.data.process.MaskedConverter.get_idx"]], "get_tok() (openprotein.data.alphabet method)": [[9, "openprotein.data.Alphabet.get_tok"]], "get_tok() (openprotein.data.process.alphabet method)": [[9, "openprotein.data.process.Alphabet.get_tok"]], "load() (openprotein.data.datafactory static method)": [[9, "openprotein.data.DataFactory.load"]], "load() (openprotein.data.factory.datafactory static method)": [[9, "openprotein.data.factory.DataFactory.load"]], "multiprocessing_context (openprotein.data.factory.ptdatafactory.dataloader property)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.multiprocessing_context"]], "num_workers (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.num_workers"]], "openprotein.data": [[9, "module-openprotein.data"]], "openprotein.data.factory": [[9, "module-openprotein.data.factory"]], "openprotein.data.process": [[9, "module-openprotein.data.process"]], "pad() (openprotein.data.alphabet method)": [[9, "openprotein.data.Alphabet.pad"]], "pad() (openprotein.data.process.alphabet method)": [[9, "openprotein.data.process.Alphabet.pad"]], "pin_memory (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.pin_memory"]], "prefetch_factor (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.prefetch_factor"]], "register_datapipe_as_function() (openprotein.data.factory.ptdatafactory.dataset class method)": [[9, "openprotein.data.factory.PTDataFactory.Dataset.register_datapipe_as_function"]], "register_function() (openprotein.data.factory.ptdatafactory.dataset class method)": [[9, "openprotein.data.factory.PTDataFactory.Dataset.register_function"]], "sampler (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.sampler"]], "timeout (openprotein.data.factory.ptdatafactory.dataloader attribute)": [[9, "openprotein.data.factory.PTDataFactory.DataLoader.timeout"]], "to_dict() (openprotein.data.alphabet method)": [[9, "openprotein.data.Alphabet.to_dict"]], "to_dict() (openprotein.data.process.alphabet method)": [[9, "openprotein.data.process.Alphabet.to_dict"]], "tokenize() (openprotein.data.alphabet method)": [[9, "openprotein.data.Alphabet.tokenize"]], "tokenize() (openprotein.data.maskedconverter method)": [[9, "openprotein.data.MaskedConverter.tokenize"]], "tokenize() (openprotein.data.process.alphabet method)": [[9, "openprotein.data.process.Alphabet.tokenize"]], "tokenize() (openprotein.data.process.maskedconverter method)": [[9, "openprotein.data.process.MaskedConverter.tokenize"]], "ec (class in openprotein.datasets)": [[10, "openprotein.datasets.EC"]], "ec (class in openprotein.datasets.ec)": [[10, "openprotein.datasets.ec.EC"]], "flip (class in openprotein.datasets)": [[10, "openprotein.datasets.Flip"]], "flip (class in openprotein.datasets.flip)": [[10, "openprotein.datasets.flip.Flip"]], "go (class in openprotein.datasets)": [[10, "openprotein.datasets.GO"]], "go (class in openprotein.datasets.go)": [[10, "openprotein.datasets.go.GO"]], "tape (class in openprotein.datasets)": [[10, "openprotein.datasets.Tape"]], "tape (class in openprotein.datasets.tape)": [[10, "openprotein.datasets.tape.Tape"]], "uniref (class in openprotein.datasets)": [[10, "openprotein.datasets.Uniref"]], "uniref (class in openprotein.datasets.uniref)": [[10, "openprotein.datasets.uniref.Uniref"]], "openprotein.datasets": [[10, "module-openprotein.datasets"]], "openprotein.datasets.ec": [[10, "module-openprotein.datasets.ec"]], "openprotein.datasets.flip": [[10, "module-openprotein.datasets.flip"]], "openprotein.datasets.go": [[10, "module-openprotein.datasets.go"]], "openprotein.datasets.tape": [[10, "module-openprotein.datasets.tape"]], "openprotein.datasets.uniref": [[10, "module-openprotein.datasets.uniref"]], "alphabet (class in openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.Alphabet"]], "esm1b (in module openprotein.models)": [[11, "openprotein.models.Esm1b"]], "fairseqincrementalstate (class in openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.FairseqIncrementalState"]], "learnedpositionalembedding (class in openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding"]], "multiheadattention (class in openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.MultiheadAttention"]], "proteinbertmodel (class in openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.ProteinBertModel"]], "transformerlayer (class in openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.TransformerLayer"]], "apply_sparse_mask() (openprotein.models.esm1b.multiheadattention method)": [[11, "openprotein.models.esm1b.MultiheadAttention.apply_sparse_mask"]], "build_alphabet() (openprotein.models.esm1b.alphabet class method)": [[11, "openprotein.models.esm1b.Alphabet.build_alphabet"]], "embedding_dim (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.embedding_dim"]], "encode() (openprotein.models.esm1b.alphabet method)": [[11, "openprotein.models.esm1b.Alphabet.encode"]], "forward() (openprotein.models.esm1b.learnedpositionalembedding method)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.forward"]], "forward() (openprotein.models.esm1b.multiheadattention method)": [[11, "openprotein.models.esm1b.MultiheadAttention.forward"]], "forward() (openprotein.models.esm1b.proteinbertmodel method)": [[11, "openprotein.models.esm1b.ProteinBertModel.forward"]], "forward() (openprotein.models.esm1b.transformerlayer method)": [[11, "openprotein.models.esm1b.TransformerLayer.forward"]], "gelu() (in module openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.gelu"]], "get_idx() (openprotein.models.esm1b.alphabet method)": [[11, "openprotein.models.esm1b.Alphabet.get_idx"]], "get_incremental_state() (openprotein.models.esm1b.fairseqincrementalstate method)": [[11, "openprotein.models.esm1b.FairseqIncrementalState.get_incremental_state"]], "get_tok() (openprotein.models.esm1b.alphabet method)": [[11, "openprotein.models.esm1b.Alphabet.get_tok"]], "init_incremental_state() (openprotein.models.esm1b.fairseqincrementalstate method)": [[11, "openprotein.models.esm1b.FairseqIncrementalState.init_incremental_state"]], "load() (openprotein.models.esm1b.proteinbertmodel method)": [[11, "openprotein.models.esm1b.ProteinBertModel.load"]], "max_norm (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.max_norm"]], "norm_type (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.norm_type"]], "num_embeddings (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.num_embeddings"]], "openprotein.models": [[11, "module-openprotein.models"]], "openprotein.models.esm1b": [[11, "module-openprotein.models.esm1b"]], "pad() (openprotein.models.esm1b.alphabet method)": [[11, "openprotein.models.esm1b.Alphabet.pad"]], "padding_idx (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.padding_idx"]], "prepare_for_onnx_export_() (openprotein.models.esm1b.multiheadattention method)": [[11, "openprotein.models.esm1b.MultiheadAttention.prepare_for_onnx_export_"]], "reorder_incremental_state() (openprotein.models.esm1b.multiheadattention method)": [[11, "openprotein.models.esm1b.MultiheadAttention.reorder_incremental_state"]], "reset_parameters() (openprotein.models.esm1b.multiheadattention method)": [[11, "openprotein.models.esm1b.MultiheadAttention.reset_parameters"]], "scale_grad_by_freq (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.scale_grad_by_freq"]], "set_incremental_state() (openprotein.models.esm1b.fairseqincrementalstate method)": [[11, "openprotein.models.esm1b.FairseqIncrementalState.set_incremental_state"]], "sparse (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.sparse"]], "to_dict() (openprotein.models.esm1b.alphabet method)": [[11, "openprotein.models.esm1b.Alphabet.to_dict"]], "tokenize() (openprotein.models.esm1b.alphabet method)": [[11, "openprotein.models.esm1b.Alphabet.tokenize"]], "training (openprotein.models.esm1b.multiheadattention attribute)": [[11, "openprotein.models.esm1b.MultiheadAttention.training"]], "training (openprotein.models.esm1b.proteinbertmodel attribute)": [[11, "openprotein.models.esm1b.ProteinBertModel.training"]], "training (openprotein.models.esm1b.transformerlayer attribute)": [[11, "openprotein.models.esm1b.TransformerLayer.training"]], "upgrade_state_dict_named() (openprotein.models.esm1b.multiheadattention method)": [[11, "openprotein.models.esm1b.MultiheadAttention.upgrade_state_dict_named"]], "utils_softmax() (in module openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.utils_softmax"]], "weight (openprotein.models.esm1b.learnedpositionalembedding attribute)": [[11, "openprotein.models.esm1b.LearnedPositionalEmbedding.weight"]], "with_incremental_state() (in module openprotein.models.esm1b)": [[11, "openprotein.models.esm1b.with_incremental_state"]], "args (class in openprotein.task.flip)": [[12, "openprotein.task.flip.Args"]], "convert (class in openprotein.task.flip)": [[12, "openprotein.task.flip.Convert"]], "proteincontactmapdecoder (class in openprotein.task.tape)": [[12, "openprotein.task.tape.ProteinContactMapDecoder"]], "proteinfunctiondecoder (class in openprotein.task.ec)": [[12, "openprotein.task.ec.ProteinFunctionDecoder"]], "sequenceclassificaitondecoder (class in openprotein.task.tape)": [[12, "openprotein.task.tape.SequenceClassificaitonDecoder"]], "sequenceregressiondecoder (class in openprotein.task.flip)": [[12, "openprotein.task.flip.SequenceRegressionDecoder"]], "sequencetosequenceclassificaitondecoder (class in openprotein.task.tape)": [[12, "openprotein.task.tape.SequenceToSequenceClassificaitonDecoder"]], "args_parser() (openprotein.task.flip.args method)": [[12, "openprotein.task.flip.Args.args_parser"]], "forward() (openprotein.task.ec.proteinfunctiondecoder method)": [[12, "openprotein.task.ec.ProteinFunctionDecoder.forward"]], "forward() (openprotein.task.flip.sequenceregressiondecoder method)": [[12, "openprotein.task.flip.SequenceRegressionDecoder.forward"]], "forward() (openprotein.task.tape.proteincontactmapdecoder method)": [[12, "openprotein.task.tape.ProteinContactMapDecoder.forward"]], "forward() (openprotein.task.tape.sequenceclassificaitondecoder method)": [[12, "openprotein.task.tape.SequenceClassificaitonDecoder.forward"]], "forward() (openprotein.task.tape.sequencetosequenceclassificaitondecoder method)": [[12, "openprotein.task.tape.SequenceToSequenceClassificaitonDecoder.forward"]], "openprotein.task": [[12, "module-openprotein.task"]], "openprotein.task.ec": [[12, "module-openprotein.task.ec"]], "openprotein.task.flip": [[12, "module-openprotein.task.flip"]], "openprotein.task.tape": [[12, "module-openprotein.task.tape"]], "training (openprotein.task.ec.proteinfunctiondecoder attribute)": [[12, "openprotein.task.ec.ProteinFunctionDecoder.training"]], "training (openprotein.task.flip.sequenceregressiondecoder attribute)": [[12, "openprotein.task.flip.SequenceRegressionDecoder.training"]], "training (openprotein.task.tape.proteincontactmapdecoder attribute)": [[12, "openprotein.task.tape.ProteinContactMapDecoder.training"]], "training (openprotein.task.tape.sequenceclassificaitondecoder attribute)": [[12, "openprotein.task.tape.SequenceClassificaitonDecoder.training"]], "training (openprotein.task.tape.sequencetosequenceclassificaitondecoder attribute)": [[12, "openprotein.task.tape.SequenceToSequenceClassificaitonDecoder.training"]], "accuracy (class in openprotein.utils)": [[13, "openprotein.utils.Accuracy"]], "accuracy (class in openprotein.utils.metrics)": [[13, "openprotein.utils.metrics.Accuracy"]], "meansquarederror (class in openprotein.utils)": [[13, "openprotein.utils.MeanSquaredError"]], "meansquarederror (class in openprotein.utils.metrics)": [[13, "openprotein.utils.metrics.MeanSquaredError"]], "metric (class in openprotein.utils.metrics)": [[13, "openprotein.utils.metrics.Metric"]], "spearman (class in openprotein.utils)": [[13, "openprotein.utils.Spearman"]], "spearman (class in openprotein.utils.metrics)": [[13, "openprotein.utils.metrics.Spearman"]], "compute_once() (openprotein.utils.accuracy method)": [[13, "openprotein.utils.Accuracy.compute_once"]], "compute_once() (openprotein.utils.meansquarederror method)": [[13, "openprotein.utils.MeanSquaredError.compute_once"]], "compute_once() (openprotein.utils.spearman method)": [[13, "openprotein.utils.Spearman.compute_once"]], "compute_once() (openprotein.utils.metrics.accuracy method)": [[13, "openprotein.utils.metrics.Accuracy.compute_once"]], "compute_once() (openprotein.utils.metrics.meansquarederror method)": [[13, "openprotein.utils.metrics.MeanSquaredError.compute_once"]], "compute_once() (openprotein.utils.metrics.metric method)": [[13, "openprotein.utils.metrics.Metric.compute_once"]], "compute_once() (openprotein.utils.metrics.spearman method)": [[13, "openprotein.utils.metrics.Spearman.compute_once"]], "convert_to_bytes() (in module openprotein.utils)": [[13, "openprotein.utils.convert_to_bytes"]], "convert_to_bytes() (in module openprotein.utils.utils)": [[13, "openprotein.utils.utils.convert_to_bytes"]], "convert_to_str() (in module openprotein.utils)": [[13, "openprotein.utils.convert_to_str"]], "convert_to_str() (in module openprotein.utils.utils)": [[13, "openprotein.utils.utils.convert_to_str"]], "gelu() (in module openprotein.utils)": [[13, "openprotein.utils.gelu"]], "gelu() (in module openprotein.utils.activation)": [[13, "openprotein.utils.activation.gelu"]], "openprotein.utils": [[13, "module-openprotein.utils"]], "openprotein.utils.activation": [[13, "module-openprotein.utils.activation"]], "openprotein.utils.metrics": [[13, "module-openprotein.utils.metrics"]], "openprotein.utils.utils": [[13, "module-openprotein.utils.utils"]], "reset() (openprotein.utils.metrics.metric method)": [[13, "openprotein.utils.metrics.Metric.reset"]], "update() (openprotein.utils.metrics.metric method)": [[13, "openprotein.utils.metrics.Metric.update"]]}})